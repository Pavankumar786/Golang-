Example 1:
package main
import "fmt"
func main() {
var b int = 15
var a int numbers := [6]int{1, 2, 3, 5} 
for a := 0; a < 10; a++ {
fmt.Printf("value of a: %d\n", a)
 }
for a < b {
a++
fmt.Printf("value of a: %d\n", a)
}
for i,x:= range numbers {
fmt.Printf("value of x = %d at %d\n", x,i)
}   
}

Output:
value of a: 0
value of a: 1
value of a: 2
value of a: 3
value of a: 4
value of a: 5
value of a: 6
value of a: 7
value of a: 8
value of a: 9
value of a: 1
value of a: 2
value of a: 3
value of a: 4
value of a: 5
value of a: 6
value of a: 7
value of a: 8
value of a: 9
value of a: 10
value of a: 11
value of a: 12
value of a: 13
value of a: 14
value of a: 15
value of x = 1 at 0
value of x = 2 at 1
value of x = 3 at 2
value of x = 5 at 3
value of x = 0 at 4
value of x = 0 at 5

Example 2:
package main
import "fmt"
func main() {
var i, j int
for i = 2; i < 100; i++ {
for j = 2; j <= (i/j); j++ {
if(i%j==0) {
break; 
}
}
if(j > (i/j)) {
fmt.Printf("%d is prime\n", i);
}
}  
}
Output:
2 is prime
3 is prime
5 is prime
7 is prime
11 is prime
13 is prime
17 is prime
19 is prime
23 is prime
29 is prime
31 is prime
37 is prime
41 is prime
43 is prime
47 is prime
53 is prime
59 is prime
61 is prime
67 is prime
71 is prime
73 is prime
79 is prime
83 is prime
89 is prime
97 is prime

Example3:
package main
import "fmt"
func main() {
var x = 25
fmt.Println("Go If Statement")
if(x > 10) {
 fmt.Printf("%d is greater than 10\n", x)
}
}


output:
25 is greater than 10

Example 4:
package main
import "fmt"
func main() {
var a = 10
var b = 20
fmt.Println("Go If_else Statement")
if (a > b) {
fmt.Printf("a is greater than b")
} 
else {
fmt.Printf("b is greater than a")
}
}

Output:
b is greater than a

Example 5:
package main
import "fmt"
func main() {
var a = 10
var b = 10
fmt.Println("Go Ladder If_else Statement")
if (a > b) {
fmt.Printf("a is greater than b")
} 
else if(a == b){
fmt.Printf("a and b are equal")
} 
else{
fmt.Printf("b is greater than a")
}
}

Output:
Go Ladder If_else Statement
a and b are equal



Example 6:
package main
import "fmt"
func main() {
var a = 25
fmt.Println("Go Nested _If Statement")
if (a < 100) {
if (a < 50) {
fmt.Println("a is less than 50")
 }
if (a >= 50) {
fmt.Println("a is greater than 50")
}
} 
}

Output:
Go Nested If Statement
a is less than 50

Example 7:
package main
import "fmt"
func main() {
var dayOfWeek = 5
fmt.Println("Go switch statement.")
switch dayOfWeek {
case 1:
fmt.Println("Today is Monday.")
case 2:
fmt.Println("Today is Tuesday.")
case 3:
fmt.Println("Today is Wednesday.")
case 4:
fmt.Println("Today is Thursday.")		
case 5:
fmt.Println("Today is Friday.")
case 6:
fmt.Println("Today is Saturday.")	
case 7:
fmt.Println("Today is Sunday.")	
default:
fmt.Println("Invalid Weekday.")
}
}

Output:
Go switch statement.
Today is Friday.

Example 8:
package main
import "fmt"
func main() {
var dayOfWeek = 5
fmt.Println("Go switch with multiple case combnied.")
switch dayOfWeek {
case 1, 2, 3, 4, 5:
fmt.Println("It's a Weekday.")
case 6, 7:
fmt.Println("Its Weekend.")
default:
fmt.Println("Invalid Day")		
}
}

Output:
It's a Weekday.

Example 9:Break Statement
package main
import "fmt"
func main() {
var a int = 10
for a < 20 {
fmt.Printf("value of a: %d\n", a);
a++;
if a > 15 {
break;
}
}
}

Output:
value of a: 10
value of a: 11
value of a: 12
value of a: 13
value of a: 14
value of a: 15

Example 10:Continue Statement

package main
import "fmt"
func main() {
var a int = 10
for a < 20 {
if a == 15 {
a = a + 1;
continue;
}
fmt.Printf("value of a: %d\n", a);
a++;     
}  
}

Output:

value of a: 10
value of a: 11
value of a: 12
value of a: 13
value of a: 14
value of a: 16
value of a: 17
value of a: 18
value of a: 19

Example 11:Go to statement
package main
import "fmt"
func main() {
var a int = 10
Loop: for a < 20 {
 if a == 15 {
 a = a + 1
goto Loop
 }
fmt.Printf("value of a: %d\n", a)
a++     
}  
}
Output:

value of a: 10
value of a: 11
value of a: 12
value of a: 13
value of a: 14
value of a: 16
value of a: 17
value of a: 18
value of a: 19
